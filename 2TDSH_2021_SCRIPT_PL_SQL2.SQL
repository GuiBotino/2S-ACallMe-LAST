create or replace PACKAGE ADD_PESQ_ESPEC_CONS AS
    PROCEDURE ADD_ESPEC (P_CD_ESPECIALIDADE T_CLG_ESPECIALIDADE.CD_ESPECIALIDADE%TYPE, P_CD_ESPECIALISTA  T_CLG_ESPECIALISTA.CD_ESPECIALISTA%TYPE);
    PROCEDURE PESQ_CONS (P_CD_CONSULTA IN OUT T_CLG_CONSULTA.CD_CONSULTA%TYPE, P_CD_ESPECIALISTA OUT T_CLG_ESPECIALISTA.CD_ESPECIALISTA%TYPE, P_CD_PACIENTE OUT T_CLG_PACIENTE.CD_PACIENTE%TYPE, P_STATUS OUT T_CLG_CONSULTA.VL_CONFIRMADO%TYPE, P_DT_CONSULTA OUT T_CLG_CONSULTA.DT_CONSULTA%TYPE);
    FUNCTION PESQ_ESPEC(P_CD_ESPECIALISTA T_CLG_ESPECIALISTA.CD_ESPECIALISTA%TYPE) RETURN VARCHAR2;
END ADD_PESQ_ESPEC_CONS;
create or replace PACKAGE BODY ADD_PESQ_ESPEC_CONS AS
    PROCEDURE ADD_ESPEC (
        P_CD_ESPECIALIDADE T_CLG_ESPECIALIDADE.CD_ESPECIALIDADE%TYPE,
        P_CD_ESPECIALISTA  T_CLG_ESPECIALISTA.CD_ESPECIALISTA%TYPE) IS
        V_CODE NUMBER;
        V_ERRM VARCHAR2(64);
    BEGIN
        INSERT INTO T_CLG_ESPECIALIZAR (CD_ESPECIALIDADE, CD_ESPECIALISTA)
        VALUES (P_CD_ESPECIALIDADE, P_CD_ESPECIALISTA);
        COMMIT;
        EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
                DBMS_OUTPUT.PUT_LINE('ORA00001' || '-' || 'VALOR DUPLICADO ENCONTRADO');
            WHEN PROGRAM_ERROR THEN
                DBMS_OUTPUT.PUT_LINE('ORA06501' || '-' || 'CONTATE O SUPORTE, ERRO INTERNO NO CÓDIGO PL/SQL');
            WHEN OTHERS THEN
                V_CODE := SQLCODE;
                V_ERRM := SUBSTR(SQLERRM, 1, 64);
                DBMS_OUTPUT.PUT_LINE('UM ERRO FOI ENCONTRADO - ' || V_CODE || ' -ERROR- ' || V_ERRM);
    END ADD_ESPEC;
    PROCEDURE PESQ_CONS (
        P_CD_CONSULTA IN OUT T_CLG_CONSULTA.CD_CONSULTA%TYPE,
        P_CD_ESPECIALISTA OUT T_CLG_ESPECIALISTA.CD_ESPECIALISTA%TYPE,
        P_CD_PACIENTE OUT T_CLG_PACIENTE.CD_PACIENTE%TYPE,
        P_STATUS OUT T_CLG_CONSULTA.VL_CONFIRMADO%TYPE,
        P_DT_CONSULTA OUT T_CLG_CONSULTA.DT_CONSULTA%TYPE) 
        IS  
        V_CODE NUMBER;
        V_ERRM VARCHAR2(64);
    BEGIN
        SELECT CD_CONSULTA, CD_ESPECIALISTA, CD_PACIENTE, VL_CONFIRMADO, DT_CONSULTA
        INTO P_CD_CONSULTA, P_CD_ESPECIALISTA, P_CD_PACIENTE, P_STATUS, P_DT_CONSULTA
        FROM T_CLG_CONSULTA
        WHERE CD_CONSULTA = P_CD_CONSULTA;
        DBMS_OUTPUT.PUT_LINE('CÓDIGO DA CONSULTA: ' || P_CD_CONSULTA);
        DBMS_OUTPUT.PUT_LINE('CÓDIGO DO ESPECIALISTA: ' || P_CD_ESPECIALISTA);
        DBMS_OUTPUT.PUT_LINE('CÓDIGO DO PACIENTE: ' || P_CD_PACIENTE);
        DBMS_OUTPUT.PUT_LINE('CONSULTA ATIVA: ' || P_STATUS);
        DBMS_OUTPUT.PUT_LINE('DATA DA CONSULTA: ' || P_DT_CONSULTA);
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                DBMS_OUTPUT.PUT_LINE('ORA01403' || '-' || 'NENHUM VALOR ENCONTRADO');
            WHEN PROGRAM_ERROR THEN
                DBMS_OUTPUT.PUT_LINE('ORA06501' || '-' || 'CONTATE O SUPORTE, ERRO INTERNO NO CÓDIGO PL/SQL');
            WHEN OTHERS THEN
                V_CODE := SQLCODE;
                V_ERRM := SUBSTR(SQLERRM, 1, 64);
                DBMS_OUTPUT.PUT_LINE('UM ERRO FOI ENCONTRADO - ' || V_CODE || ' -ERROR- ' || V_ERRM);
    END PESQ_CONS;
    FUNCTION PESQ_ESPEC(
        P_CD_ESPECIALISTA T_CLG_ESPECIALISTA.CD_ESPECIALISTA%TYPE)  
        RETURN VARCHAR2
        IS
        V_NOME_ESPEC T_CLG_ESPECIALISTA.NM_ESPECIALISTA%TYPE;
        V_CODE NUMBER;
        V_ERRM VARCHAR2(64);
    BEGIN 
        SELECT NM_ESPECIALISTA
        INTO V_NOME_ESPEC
        FROM T_CLG_ESPECIALISTA
        WHERE CD_ESPECIALISTA = P_CD_ESPECIALISTA;
        RETURN V_NOME_ESPEC;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                DBMS_OUTPUT.PUT_LINE('ORA01403' || '-' || 'NENHUM VALOR ENCONTRADO');
            WHEN PROGRAM_ERROR THEN
                DBMS_OUTPUT.PUT_LINE('ORA06501' || '-' || 'CONTATE O SUPORTE, ERRO INTERNO NO CÓDIGO PL/SQL');
            WHEN OTHERS THEN
                V_CODE := SQLCODE;
                V_ERRM := SUBSTR(SQLERRM, 1, 64);
                DBMS_OUTPUT.PUT_LINE('UM ERRO FOI ENCONTRADO - ' || V_CODE || ' -ERROR- ' || V_ERRM);   
    END PESQ_ESPEC;
END ADD_PESQ_ESPEC_CONS;

CREATE OR REPLACE TRIGGER AUD_INS_ESPEC_ESPECIALIZAR BEFORE
    INSERT OR UPDATE OF CD_ESPECIALISTA ON T_CLG_ESPECIALIZAR
    FOR EACH ROW
DECLARE
    CODIGO NUMBER;
BEGIN
    SELECT A.CD_ESPECIALISTA INTO CODIGO
    FROM T_CLG_ESPECIALISTA A
    WHERE A.CD_ESPECIALISTA = :NEW.CD_ESPECIALISTA;
    
    IF ( CODIGO IS NULL ) THEN
        DBMS_OUTPUT.PUT_LINE('CÓDIGO INFORMADO NÃO EXISTE');
    END IF;
EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;    
END;

CREATE OR REPLACE TRIGGER AUD_INS_ESPECIALIDADE_ESPECIALIZAR BEFORE
    INSERT OR UPDATE OF CD_ESPECIALIDADE ON T_CLG_ESPECIALIZAR
    FOR EACH ROW
DECLARE
    CODIGO NUMBER;
BEGIN
    SELECT A.CD_ESPECIALIDADE INTO CODIGO
    FROM T_CLG_ESPECIALIDADE A
    WHERE A.CD_ESPECIALIDADE = :NEW.CD_ESPECIALIDADE;
    
    IF ( CODIGO IS NULL ) THEN
        DBMS_OUTPUT.PUT_LINE('CÓDIGO INFORMADO NÃO EXISTE');
    END IF;
EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;    
END;